/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package View_Custom_pannel;

import View.MAIN_UI;

import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.RenderingHints;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.*;

/**
 *
 * @author Admin
 */
public class RoundRect extends javax.swing.JPanel {

    /**
     * Creates new form RoundRect
     */
    public RoundRect() {
        initComponents();
        setOpaque(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel4 = new javax.swing.JLabel();

        setPreferredSize(new java.awt.Dimension(100, 37));
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dark32x32.png"))); // NOI18N
        jLabel4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel4MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 100, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
    }// </editor-fold>//GEN-END:initComponents
    int i = 0;
    private void jLabel4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel4MouseClicked
        // TODO add your handling code here:
        if (SwingUtilities.getWindowAncestor(this) instanceof MAIN_UI) {
            MAIN_UI parentFrame = (MAIN_UI) SwingUtilities.getWindowAncestor(this);
            parentFrame.SwitchTheme();
        }
        dash(jLabel4);
        if(i==0){
            jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lightblack.png")));
            i = 1;
        }else{
            jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dark32x32.png")));
            i = 0;
        }

    }//GEN-LAST:event_jLabel4MouseClicked

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        // TODO add your handling code here:
        dash(jLabel4);
        if(i==0){
            jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lightblack.png")));
            i = 1;
        }else{
            jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dark32x32.png")));
            i = 0;
        }
    }//GEN-LAST:event_formMouseClicked
    
    
    private int DASH_DURATION = 8;
    private int direction = 1;
    private void dash(JComponent component) {
        //int posx = component.getX();
        Timer timer = new Timer(5, null);
        timer.addActionListener(new ActionListener() {
            int shakes = 0;
            @Override
            public void actionPerformed(ActionEvent e) {
                if (shakes < DASH_DURATION) { // Chạy trong thời gian chỉ định
                    int x = component.getX() + (direction * DASH_DURATION);
                    component.setLocation(x, component.getY());
//                    direction *= -1; // Đổi hướng
                    shakes++;
                } else {
                    timer.stop(); // Dừng timer
                    direction *= -1;
                   // component.setLocation(posx, component.getY()); // Trở về vị trí ban đầu (có thể thay đổi vị trí này)
                }
            }
        });

        timer.start(); // Bắt đầu rung
    }
    
    protected void paintChildren(Graphics grphcs) {
        Graphics2D g2 = (Graphics2D) grphcs;
        g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
        g2.setColor(this.getBackground());
        g2.fillRoundRect(0, 0, getWidth(), getHeight(), getHeight(), getHeight());
        super.paintChildren(grphcs);
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel4;
    // End of variables declaration//GEN-END:variables
}
